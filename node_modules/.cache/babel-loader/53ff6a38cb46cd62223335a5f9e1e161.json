{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Chirag\\\\Desktop\\\\New folder\\\\weight-tracker\\\\src\\\\components\\\\Login.js\";\nimport React from \"react\";\nimport firebase from \"firebase\";\nimport StyleFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar uiConfig = {\n  signInFlow: \"popup\",\n  signInOptions: [firebase.auth.EmailAuthProvider.PROVIDER_ID, firebase.auth.GoogleAuthProvider.PROVIDER_ID, firebase.auth.GithubAuthProvider.PROVIDER_ID, firebase.auth.PhoneAuthProvider.PROVIDER_ID],\n  callbacks: {\n    signInSuccessWithAuthResult: async authResult => {\n      const userInfo = authResult.additionalUserInfo;\n\n      if (userInfo.isNewUser && userInfo.providerId === \"password\") {\n        try {\n          await authResult.user.sendEmailVerification();\n          console.log(\"check your email\");\n        } catch (e) {\n          console.log(\"Unable to send email verification email\");\n        }\n      }\n\n      return false;\n    }\n  }\n};\n\nfunction Login(props) {\n  const {\n    email,\n    password,\n    setEmail,\n    setPassword,\n    handleLogin,\n    handleSignup,\n    hasAccount,\n    setHasAccount,\n    emailError,\n    passwordError\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center h-full w-full align-middle\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Username\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      autoFocus: true,\n      required: true,\n      className: \"appearance-none  relative block px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm w-80\",\n      value: email,\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: emailError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"\\r appearance-none rounded-md relative block px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900  focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm w-80\",\n      type: \"password\",\n      required: true,\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: passwordError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: hasAccount ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bottom-3 right-0\",\n          onClick: handleLogin,\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(StyleFirebaseAuth, {\n          uiConfig: uiConfig,\n          firebaseAuth: firebase.auth()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Don't have an account ?\", /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: () => setHasAccount(!hasAccount),\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSignup,\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(StyleFirebaseAuth, {\n          uiConfig: uiConfig,\n          firebaseAuth: firebase.auth()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Have an account ?\", /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: () => setHasAccount(!hasAccount),\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/Chirag/Desktop/New folder/weight-tracker/src/components/Login.js"],"names":["React","firebase","StyleFirebaseAuth","uiConfig","signInFlow","signInOptions","auth","EmailAuthProvider","PROVIDER_ID","GoogleAuthProvider","GithubAuthProvider","PhoneAuthProvider","callbacks","signInSuccessWithAuthResult","authResult","userInfo","additionalUserInfo","isNewUser","providerId","user","sendEmailVerification","console","log","e","Login","props","email","password","setEmail","setPassword","handleLogin","handleSignup","hasAccount","setHasAccount","emailError","passwordError","target","value"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport firebase from \"firebase\";\r\n\r\nimport StyleFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\r\n\r\nvar uiConfig = {\r\n  signInFlow: \"popup\",\r\n  signInOptions: [\r\n    firebase.auth.EmailAuthProvider.PROVIDER_ID,\r\n    firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n    firebase.auth.GithubAuthProvider.PROVIDER_ID,\r\n    firebase.auth.PhoneAuthProvider.PROVIDER_ID,\r\n  ],\r\n  callbacks: {\r\n    signInSuccessWithAuthResult: async (authResult) => {\r\n      const userInfo = authResult.additionalUserInfo;\r\n      if (userInfo.isNewUser && userInfo.providerId === \"password\") {\r\n        try {\r\n          await authResult.user.sendEmailVerification();\r\n          console.log(\"check your email\");\r\n        } catch (e) {\r\n          console.log(\"Unable to send email verification email\");\r\n        }\r\n      }\r\n      return false;\r\n    },\r\n  },\r\n};\r\n\r\nfunction Login(props) {\r\n  const {\r\n    email,\r\n    password,\r\n    setEmail,\r\n    setPassword,\r\n    handleLogin,\r\n    handleSignup,\r\n    hasAccount,\r\n    setHasAccount,\r\n    emailError,\r\n    passwordError,\r\n  } = props;\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center h-full w-full align-middle\">\r\n      <label>Username</label>\r\n      <input\r\n        type=\"text\"\r\n        autoFocus\r\n        required\r\n        className=\"appearance-none  relative block px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm w-80\"\r\n        value={email}\r\n        onChange={(e) => setEmail(e.target.value)}\r\n      />\r\n      <p>{emailError}</p>\r\n      <label>Password</label>\r\n      <input\r\n        className=\"\r\n          appearance-none rounded-md relative block px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900  focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm w-80\"\r\n        type=\"password\"\r\n        required\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n      />\r\n      <p>{passwordError}</p>\r\n\r\n      <div>\r\n        {hasAccount ? (\r\n          <>\r\n            <button className=\"bottom-3 right-0\" onClick={handleLogin}>\r\n              Sign In\r\n            </button>\r\n            <StyleFirebaseAuth\r\n              uiConfig={uiConfig}\r\n              firebaseAuth={firebase.auth()}\r\n            />\r\n            <p>\r\n              Don't have an account ?\r\n              <span onClick={() => setHasAccount(!hasAccount)}>Sign Up</span>\r\n            </p>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <button onClick={handleSignup}>Sign Up</button>\r\n            <StyleFirebaseAuth\r\n              uiConfig={uiConfig}\r\n              firebaseAuth={firebase.auth()}\r\n            />\r\n            <p>\r\n              Have an account ?\r\n              <span onClick={() => setHasAccount(!hasAccount)}>Sign In</span>\r\n            </p>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}